// This file was generated by Supabase CLI
// To update this file, run: npx supabase gen types typescript --local > src/types/database.types.ts

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          email: string
          full_name: string | null
          avatar_url: string | null
          subscription_tier: string
          subscription_status: string
          preferences: Record<string, any> | null
          onboarding_completed: boolean
          last_active: string
        }
        Insert: {
          id: string
          created_at?: string
          updated_at?: string
          email: string
          full_name?: string | null
          avatar_url?: string | null
          subscription_tier?: string
          subscription_status?: string
          preferences?: Record<string, any> | null
          onboarding_completed?: boolean
          last_active?: string
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          email?: string
          full_name?: string | null
          avatar_url?: string | null
          subscription_tier?: string
          subscription_status?: string
          preferences?: Record<string, any> | null
          onboarding_completed?: boolean
          last_active?: string
        }
        Relationships: [
          {
            foreignKeyName: "profiles_id_fkey"
            columns: ["id"]
            isOneToOne: true
            referencedRelation: "users"
            referencedColumns: ["id"]
          }
        ]
      }
      projects: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          user_id: string
          name: string
          description: string | null
          type: string
          status: string
          data: Record<string, any> | null
          settings: Record<string, any> | null
          collaborators: string[] | null
          is_public: boolean
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          user_id: string
          name: string
          description?: string | null
          type: string
          status?: string
          data?: Record<string, any> | null
          settings?: Record<string, any> | null
          collaborators?: string[] | null
          is_public?: boolean
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          user_id?: string
          name?: string
          description?: string | null
          type?: string
          status?: string
          data?: Record<string, any> | null
          settings?: Record<string, any> | null
          collaborators?: string[] | null
          is_public?: boolean
        }
        Relationships: [
          {
            foreignKeyName: "projects_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
      sitemaps: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          project_id: string
          title: string
          description: string | null
          pages: Record<string, any> | null
          metadata: Record<string, any> | null
          version: number
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          project_id: string
          title: string
          description?: string | null
          pages?: Record<string, any> | null
          metadata?: Record<string, any> | null
          version?: number
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          project_id?: string
          title?: string
          description?: string | null
          pages?: Record<string, any> | null
          metadata?: Record<string, any> | null
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "sitemaps_project_id_fkey"
            columns: ["project_id"]
            isOneToOne: false
            referencedRelation: "projects"
            referencedColumns: ["id"]
          }
        ]
      }
      wireframes: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          sitemap_id: string
          title: string
          description: string | null
          layout: Record<string, any> | null
          style_guide: Record<string, any> | null
          components: string[] | null
          version: number
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          sitemap_id: string
          title: string
          description?: string | null
          layout?: Record<string, any> | null
          style_guide?: Record<string, any> | null
          components?: string[] | null
          version?: number
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          sitemap_id?: string
          title?: string
          description?: string | null
          layout?: Record<string, any> | null
          style_guide?: Record<string, any> | null
          components?: string[] | null
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "wireframes_sitemap_id_fkey"
            columns: ["sitemap_id"]
            isOneToOne: false
            referencedRelation: "sitemaps"
            referencedColumns: ["id"]
          }
        ]
      }
      style_guides: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          wireframe_id: string
          title: string
          description: string | null
          colors: Record<string, any> | null
          typography: Record<string, any> | null
          spacing: Record<string, any> | null
          components: Record<string, any> | null
          grid: Record<string, any> | null
          breakpoints: Record<string, any> | null
          version: number
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          wireframe_id: string
          title: string
          description?: string | null
          colors?: Record<string, any> | null
          typography?: Record<string, any> | null
          spacing?: Record<string, any> | null
          components?: Record<string, any> | null
          grid?: Record<string, any> | null
          breakpoints?: Record<string, any> | null
          version?: number
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          wireframe_id?: string
          title?: string
          description?: string | null
          colors?: Record<string, any> | null
          typography?: Record<string, any> | null
          spacing?: Record<string, any> | null
          components?: Record<string, any> | null
          grid?: Record<string, any> | null
          breakpoints?: Record<string, any> | null
          version?: number
        }
        Relationships: [
          {
            foreignKeyName: "style_guides_wireframe_id_fkey"
            columns: ["wireframe_id"]
            isOneToOne: false
            referencedRelation: "wireframes"
            referencedColumns: ["id"]
          }
        ]
      }
      components: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          name: string
          description: string | null
          category: string
          framework: string
          code: string | null
          preview_url: string | null
          tags: string[] | null
          props: Record<string, any> | null
          usage_count: number
          rating: number | null
          author_id: string | null
          is_featured: boolean
          is_public: boolean
          status: string
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          name: string
          description?: string | null
          category: string
          framework: string
          code?: string | null
          preview_url?: string | null
          tags?: string[] | null
          props?: Record<string, any> | null
          usage_count?: number
          rating?: number | null
          author_id?: string | null
          is_featured?: boolean
          is_public?: boolean
          status?: string
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          name?: string
          description?: string | null
          category?: string
          framework?: string
          code?: string | null
          preview_url?: string | null
          tags?: string[] | null
          props?: Record<string, any> | null
          usage_count?: number
          rating?: number | null
          author_id?: string | null
          is_featured?: boolean
          is_public?: boolean
          status?: string
        }
        Relationships: [
          {
            foreignKeyName: "components_author_id_fkey"
            columns: ["author_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
      component_libraries: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          name: string
          description: string | null
          framework: string
          components: string[] | null
          user_id: string
          is_public: boolean
          version: string
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          name: string
          description?: string | null
          framework: string
          components?: string[] | null
          user_id: string
          is_public?: boolean
          version?: string
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          name?: string
          description?: string | null
          framework?: string
          components?: string[] | null
          user_id?: string
          is_public?: boolean
          version?: string
        }
        Relationships: [
          {
            foreignKeyName: "component_libraries_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          }
        ]
      }
      ai_generations: {
        Row: {
          id: string
          created_at: string
          updated_at: string
          user_id: string
          project_id: string | null
          type: string
          prompt: string
          input_data: Record<string, any> | null
          output_data: Record<string, any> | null
          model_used: string
          tokens_used: number
          cost: number | null
          status: string
          error_message: string | null
          execution_time: number | null
        }
        Insert: {
          id?: string
          created_at?: string
          updated_at?: string
          user_id: string
          project_id?: string | null
          type: string
          prompt: string
          input_data?: Record<string, any> | null
          output_data?: Record<string, any> | null
          model_used: string
          tokens_used?: number
          cost?: number | null
          status?: string
          error_message?: string | null
          execution_time?: number | null
        }
        Update: {
          id?: string
          created_at?: string
          updated_at?: string
          user_id?: string
          project_id?: string | null
          type?: string
          prompt?: string
          input_data?: Record<string, any> | null
          output_data?: Record<string, any> | null
          model_used?: string
          tokens_used?: number
          cost?: number | null
          status?: string
          error_message?: string | null
          execution_time?: number | null
        }
        Relationships: [
          {
            foreignKeyName: "ai_generations_user_id_fkey"
            columns: ["user_id"]
            isOneToOne: false
            referencedRelation: "profiles"
            referencedColumns: ["id"]
          },
          {
            foreignKeyName: "ai_generations_project_id_fkey"
            columns: ["project_id"]
            isOneToOne: false
            referencedRelation: "projects"
            referencedColumns: ["id"]
          }
        ]
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}